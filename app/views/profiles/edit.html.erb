<h1>Profile Settings</h1>

<div class="ui attached segment">
  <%= form_with model: @profile, class: 'ui large form', local: true do |form| %>
    <div class="field">
      <%= form.label :photo_url, 'Avatar' %>
      <%= form.file_field :photo_url, accept: 'image/png,image/gif,image/jpeg, image/jpg' %>
    </div>
    <div class='field'>
      <%= form.label :username %>
      <%= form.text_field :username, required: true %>
    </div>
    <div class='field'>
      <%= form.label :bio, 'Biography' %>
      <%= form.text_area :bio, placeholder: 'Enter a short biography of yourself', maxlength: 204, rows: 4 %>
    </div>
    <%= form.submit 'Update', class: 'ui blue button' %>
    <%= link_to profile_path(current_user.profile) do %>
      <button class="ui grey button">Cancel</button>
    <% end %>
    <%= link_to registration_path(current_user), data: { confirm: "Do you want to delete your account? Once deleted, account cannot be retrieved." }, method: :delete, class: "right" do %>
      <button class="negative ui button delete-account right floated">Delete Account</button>
    <% end %>
  <% end %>
</div>

<audio id="player" controls></audio>
<button id="record">record</button>
<button id="stop">Stop</button>
<a id="download">Download</a>
<script>
  var player = document.getElementById('player');
  var record = document.getElementById('record');
  var stop = document.getElementById('stop');
  var download = document.getElementById('download');


  function recordMedia(stream) {

  	var options = {mimeType: 'audio/webm'}
  	var recorder = new MediaRecorder(stream, options);

	  record.addEventListener('click', () => {
	  	recorder.start();
	  });

	  stop.addEventListener('click', () => {
	  	recorder.stop();
	  });

	  var chunks = [];

	  recorder.onstop = function(e) {
	    console.log("data available after MediaRecorder.stop() called.");

	    var blob = new Blob(chunks, { 'type' : 'audio/wav' });
	    var audioURL = window.URL.createObjectURL(blob);
	    player.src = audioURL;
	    download.href = audioURL
	    download.download =  'test.wav'
	    console.log(audioURL);
	  };

	  recorder.ondataavailable = function(e) {
	    chunks.push(e.data);
	  };

	};

  var handleSuccess = function(stream) {
    player.srcObject = stream;
  };

	navigator.mediaDevices.getUserMedia({ audio: true, video: false}).then(recordMedia);

</script>
